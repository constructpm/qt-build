---
name: CI

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'
  push:
    tags:
      - v*
    paths-ignore:
      - '**/*.md'

jobs:
  tar-src:
    name: "Tar ${{ matrix.config.qt }} source"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - qt: "5.3.1"
    steps:
      - id: config
        run: echo "artefact_name=qt-${{ matrix.config.qt }}-src.tar.gz" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          repository: qt/qt5
          ref: v${{ matrix.config.qt }}
          submodules: recursive
          path: qt-src
      - name: Archive
        run: tar --create --xz --file "${{ steps.config.outputs.artefact_name }}" --exclude-vcs qt-src
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: "${{ steps.config.outputs.artefact_name }}"
          path: "${{ github.workspace }}/${{ steps.config.outputs.artefact_name }}"

  release:
    if: contains(github.ref, 'tags/v')

    name: Create Release
    runs-on: ubuntu-latest
    needs: tar-src

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  upload:
    if: contains(github.ref, 'tags/v')

    name: "Upload ${{ matrix.config.artefact }} to release"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - artefact: qt-5.3.1-src.tar.gz
    needs: release

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: "${{ matrix.config.artefact }}"
          path: ./
      - name: Upload to Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: "./${{ matrix.config.artefact }}"
          asset_name: "${{ matrix.config.artefact }}"
          asset_content_type: application/x-gtar


